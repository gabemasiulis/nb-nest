$(document).ready(function(){$(".share a").click(function(e){e.preventDefault(),window.open(this.href,"","height = 500, width = 500")});var e=$(".comment-container textarea"),t=$(".comment-form-controls, .comment-ccs");e.one("focus",function(){t.show()}),""!==e.val()&&t.show();var n=$(".request-container .comment-container .comment-show-container"),a=$(".request-container .comment-container .comment-fields"),o=$(".request-container .comment-container .request-submit-comment");n.on("click",function(){n.hide(),a.show(),o.show(),e.focus()});var i=$(".request-container .mark-as-solved:not([data-disabled])"),r=$(".request-container .comment-container input[type=checkbox]"),c=$(".request-container .comment-container input[type=submit]");i.on("click",function(){r.attr("checked",!0),c.prop("disabled",!0),$(this).attr("data-disabled",!0).closest("form").submit()});var s=$(".request-container .comment-container textarea");function u(){window.location.search=$.param({query:$("#quick-search").val(),status:$("#request-status-select").val(),organization_id:$("#request-organization-select").val()})}s.on("keyup",function(){""!==s.val()?(i.text(i.data("solve-and-submit-translation")),c.prop("disabled",!1)):(i.text(i.data("solve-translation")),c.prop("disabled",!0))}),""===s.val()&&c.prop("disabled",!0),$("#request-status-select, #request-organization-select").on("change",function(){u()}),$("#quick-search").on("keypress",function(e){13===e.which&&u()}),$(".header .icon-menu").on("click",function(e){e.stopPropagation();var t=document.getElementById("user-nav"),n="true"===t.getAttribute("aria-expanded");t.setAttribute("aria-expanded",!n)}),0===$("#user-nav").children().length&&$(".header .icon-menu").hide(),$("#request-organization select").on("change",function(){this.form.submit()}),$(".collapsible-nav, .collapsible-sidebar").on("click",function(e){e.stopPropagation();var t="true"===this.getAttribute("aria-expanded");this.setAttribute("aria-expanded",!t)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
